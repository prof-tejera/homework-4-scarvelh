{"version":3,"sources":["components/Number.js","components/Operator.js","components/Screen.js","components/Calculator.js","App.js","index.js"],"names":["Container","styled","div","Number","onClick","props","value","style","this","Component","Operator","Screen","AlignGrid","display","alignItems","EqualButton","backgroundColor","color","textAlign","ArithmeticsKeys","SpecialKeys","justifyContent","CenterNumberKeys","Calculator","state","operator","calculatorValues","handleNumberClick","number","setState","handleOperatorClick","calculatedResult","evalStorage","push","evaluate","e","console","log","getScreenValue","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40414edf.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  padding: 10px;\n  border: 1px solid black;\n  width: 60px;\n  right: 0;\n  bottom: 0;\n  align-items: center;\n  //display:flex;\n  //align:\"center\";\n`;\n\nclass Number extends Component {\n  render() {\n    return (\n      <Container onClick={() => this.props.onClick(this.props.value)} style={this.props.style}>\n        {this.props.value}\n      </Container>\n    );\n  }\n}\n\nNumber.propTypes = {\n  // FOR TESTING COMMENTED OUT\n  //onClick: PropTypes.string,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  props: PropTypes.object\n};\n\nexport default Number;\n","import { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  padding: 10px;\n  border: 1px solid black;\n  width: 60px;\n`;\n\nclass Operator extends Component {\n  render() {\n    return (\n      <Container onClick={() => this.props.onClick(this.props.value)} style={this.props.style}>\n        {this.props.value}\n      </Container>\n    );\n  }\n}\n\nOperator.propTypes = {\n  // FOR TESTING COMMENTED OUT\n  //onClick: PropTypes.string,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  props: PropTypes.object\n};\nexport default Operator;\n","import { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n\n  border: 1px solid black;\n  width: 330px;\n  height: 40px;\n  margin-bottom: 10px;\n  text-align: right;\n\n  padding-top: 10px;\n  font-weight: bolder;\n  background-color: white; /* change the screen background color */\n  //text-wrap:;\n  overflow: scroll;\n`;\n\nclass Screen extends Component {\n  render() {\n    // this.props.style is only validated if passed.\n    return <Container style={this.props.style}>{this.props.value}</Container>;\n\n  }\n}\n\nScreen.propTypes = {\n   // FOR TESTING COMMENTED OUT\n  //style: PropTypes.string\n  style: PropTypes.object\n\n};\nexport default Screen;\n","import { Component } from \"react\";\nimport Number from \"./Number\";\nimport Operator from \"./Operator\";\nimport Screen from \"./Screen\";\nimport { evaluate } from \"mathjs\";\n// align text in a grid\nconst AlignGrid = {\n\n  display: \"flex\",\n  alignItems: \"center\"\n};\n// equals button\nconst EqualButton = {\n\n  backgroundColor: \"green\",\n  color: \"yellow\",\n  textAlign: \"center\"\n\n};\n// keys '+' '-' '/' '*'\nconst ArithmeticsKeys = {\n  backgroundColor: \"grey\",\n  textAlign: \"center\"\n\n};\n// keys '(' '-' ')' '.'\nconst SpecialKeys = {\n  backgroundColor: \"cyan\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  textAlign: \"center\"\n};\n// center text in Keys\nconst CenterNumberKeys = {\n  textAlign: \"center\"\n};\n\nclass Calculator extends Component {\n\n  state = {\n    operator: null,\n    // keep the value of what is on the calculator screen\n    calculatorValues: \"\"\n  };\n\n  handleNumberClick = (number) => {\n    // remove the '+' for the +/- key\n    if (number === \"+/-\") {\n      number = \"-\";\n    }\n    // append the values that is press to the state value 'calculatorValues'\n    this.setState({ calculatorValues: this.state.calculatorValues + number });\n\n  };\n\n  handleOperatorClick = (operator) => {\n\n    if (operator === \"=\") {\n      // get formula from current state\n      let calculatedResult = this.state.calculatorValues;\n      // Array for evaluation parameters\n      let evalStorage = [];\n      // push value onto array\n      evalStorage.push(calculatedResult);\n      // Catch the error that is returned from the evaluation function\n      try {\n        // evaluation is been used from mathjs library\n        this.setState({ calculatorValues: evaluate(evalStorage) });\n      } catch (e) {\n        this.setState({ calculatorValues: \"Error\" });\n      }\n      //console.log(\"Total == :\" + evaluate(\"2+3\"));\n      //math.\n\n    } else if (operator === \"clear\") {\n      // clear calculator screen\n      this.setState({ calculatorValues: \"\" });\n      console.log(\"clear\");\n    } else {\n      this.setState({ operator });\n      this.setState({ calculatorValues: this.state.calculatorValues + operator });\n    }\n  };\n\n\n  getScreenValue = () => this.state.calculatorValues;\n  // AlignGrid = {\n  //   display: \"flex\",\n  //   //display: \"inline-block\"\n  // }\n\n  render() {\n    return (\n      <>\n        <Screen value={this.getScreenValue()} />\n        <div style={{ display: \"inline-block\" }}>\n          <div style={AlignGrid}>\n            <Number value={\"(\"} onClick={this.handleNumberClick} style={SpecialKeys} />\n            <Number value={\"+/-\"} onClick={this.handleNumberClick} style={SpecialKeys} />\n            <Number value={\")\"} onClick={this.handleNumberClick} style={SpecialKeys} />\n            <Operator value=\"clear\" onClick={this.handleOperatorClick} style={CenterNumberKeys} />\n          </div>\n          <div style={AlignGrid}>\n            <Number value={1} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Number value={2} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Number value={3} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Operator value=\"/\" onClick={this.handleOperatorClick} style={ArithmeticsKeys} />\n\n          </div>\n          <div style={AlignGrid}>\n            <Number value={4} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Number value={5} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Number value={6} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Operator value=\"*\" onClick={this.handleOperatorClick} style={ArithmeticsKeys} />\n\n          </div>\n          <div style={AlignGrid}>\n            <Number value={7} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Number value={8} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Number value={9} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Operator value=\"+\" onClick={this.handleOperatorClick} style={ArithmeticsKeys} />\n\n\n          </div>\n\n          <div style={AlignGrid}>\n            <Number value={\".\"} onClick={this.handleNumberClick} style={SpecialKeys} />\n            <Number value={0} onClick={this.handleNumberClick} style={CenterNumberKeys} />\n            <Operator value=\"=\" onClick={this.handleOperatorClick} style={EqualButton} />\n            <Operator value=\"-\" onClick={this.handleOperatorClick} style={ArithmeticsKeys} />\n          </div>\n        </div>\n\n      </>\n    );\n  }\n}\n\nexport default Calculator;\n","import './App.css';\nimport Calculator from 'components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <header > Special Calculator</header>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}